{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1","program":"/Users/zerrocdn/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","priority_queue","--edition=2018","/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=4534ead271595bdd","-C","extra-filename=-4534ead271595bdd","--out-dir","/Users/zerrocdn/Downloads/edav1/target/rls/debug/deps","-L","dependency=/Users/zerrocdn/Downloads/edav1/target/rls/debug/deps","--extern","indexmap=/Users/zerrocdn/Downloads/edav1/target/rls/debug/deps/libindexmap-4989eb18e1d3dc63.rmeta","--cap-lints","allow","--cfg","has_std","--error-format=json","--sysroot","/Users/zerrocdn/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/zerrocdn/Downloads/edav1/target/rls/debug/deps/libpriority_queue-4534ead271595bdd.rmeta"},"prelude":{"crate_id":{"name":"priority_queue","disambiguator":[1390898497777197237,18241526867531717456]},"crate_root":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src","external_crates":[{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[13507278270228250722,6470063915836802043]}},{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6312757922955480086,11832296192963936419]}},{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16652855400814394552,3495596286150435959]}},{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[18234500808233325281,8054806421063892212]}},{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10775116943328023194,12219102906766117513]}},{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1538884297525888517,5002428518154779942]}},{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14978916554810418268,9452475842903877899]}},{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9129998148738601285,16682478406402277739]}},{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6605155059179020829,8430410367900381559]}},{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6967628466615619860,8158562387985861476]}},{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[10871092226859507948,3911879541820269765]}},{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[15249100487241240341,1824268709123656760]}},{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[8920039621360168832,10958543024113700947]}},{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[13357827529512131024,2683052521333885452]}},{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[16097575015887479102,1115643885953298202]}},{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","num":16,"id":{"name":"indexmap","disambiguator":[8135744997984281375,10031974139386035566]}},{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","num":17,"id":{"name":"hashbrown","disambiguator":[16843174104283473463,6208040162245800551]}}],"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":815,"byte_end":28947,"line_start":21,"line_end":970,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":252},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":2762,"byte_end":2775,"line_start":88,"line_end":88,"column_start":24,"column_end":37},"alias_span":null,"name":"PriorityQueue","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":815,"byte_end":28947,"line_start":21,"line_end":970,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":71},{"krate":0,"index":251}],"decl_id":null,"docs":" This crate provide a priority queue backed by an hashmap\n with some efficient methods to change the priority of an element in\n **O(log(N))** time (worst case).","sig":null,"attributes":[{"value":"/ This crate provide a priority queue backed by an hashmap","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":815,"byte_end":875,"line_start":21,"line_end":21,"column_start":1,"column_end":61}},{"value":"/ with some efficient methods to change the priority of an element in","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":876,"byte_end":947,"line_start":22,"line_end":22,"column_start":1,"column_end":72}},{"value":"/ **O(log(N))** time (worst case).","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":948,"byte_end":984,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":985,"byte_end":988,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The elements (called `Item`s, of type `I`) must implement","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":989,"byte_end":1050,"line_start":25,"line_end":25,"column_start":1,"column_end":62}},{"value":"/ [`Hash`](https://doc.rust-lang.org/std/hash/trait.Hash.html)","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":1051,"byte_end":1115,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ and [`Eq`](https://doc.rust-lang.org/std/cmp/trait.Eq.html) traits.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":1116,"byte_end":1187,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":1188,"byte_end":1191,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This can frequently be achieved by using `#[derive(PartialEq, Eq, Hash)]`.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":1192,"byte_end":1270,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ If you implement these yourself, it is important that the following property holds:","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":1271,"byte_end":1358,"line_start":30,"line_end":30,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":1359,"byte_end":1362,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":1363,"byte_end":1374,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"/ k1 == k2 -> hash(k1) == hash(k2)","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":1375,"byte_end":1411,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":1412,"byte_end":1419,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":1420,"byte_end":1423,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ In other words, if two keys are equal, their hashes must be equal.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":1424,"byte_end":1494,"line_start":36,"line_end":36,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":1495,"byte_end":1498,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ The priority `P` may be any type that implements","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":1499,"byte_end":1551,"line_start":38,"line_end":38,"column_start":1,"column_end":53}},{"value":"/ [`Ord`](https://doc.rust-lang.org/std/cmp/trait.Ord.html).","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":1552,"byte_end":1614,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/ For reverse order remember the standard wrapper","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":1615,"byte_end":1666,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"/ [`Reverse<T>`](https://doc.rust-lang.org/std/cmp/struct.Reverse.html)","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":1667,"byte_end":1740,"line_start":41,"line_end":41,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":1741,"byte_end":1744,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":1745,"byte_end":1758,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":1759,"byte_end":1770,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/ use priority_queue::PriorityQueue;","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":1771,"byte_end":1809,"line_start":45,"line_end":45,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":1810,"byte_end":1813,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":1814,"byte_end":1829,"line_start":47,"line_end":47,"column_start":1,"column_end":16}},{"value":"/     let mut pq = PriorityQueue::new();","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":1830,"byte_end":1872,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":1873,"byte_end":1876,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     assert!(pq.is_empty());","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":1877,"byte_end":1908,"line_start":50,"line_end":50,"column_start":1,"column_end":32}},{"value":"/     pq.push(\"Apples\", 5);","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":1909,"byte_end":1938,"line_start":51,"line_end":51,"column_start":1,"column_end":30}},{"value":"/     pq.push(\"Bananas\", 8);","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":1939,"byte_end":1969,"line_start":52,"line_end":52,"column_start":1,"column_end":31}},{"value":"/     pq.push(\"Strawberries\", 23);","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":1970,"byte_end":2006,"line_start":53,"line_end":53,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":2007,"byte_end":2010,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(pq.peek(), Some((&\"Strawberries\", &23)));","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":2011,"byte_end":2071,"line_start":55,"line_end":55,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":2072,"byte_end":2075,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     pq.change_priority(\"Bananas\", 25);","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":2076,"byte_end":2118,"line_start":57,"line_end":57,"column_start":1,"column_end":43}},{"value":"/     assert_eq!(pq.peek(), Some((&\"Bananas\", &25)));","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":2119,"byte_end":2174,"line_start":58,"line_end":58,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":2175,"byte_end":2178,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     for (item, _) in pq.into_sorted_iter() {","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":2179,"byte_end":2227,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"/         println!(\"{}\", item);","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":2228,"byte_end":2261,"line_start":61,"line_end":61,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":2262,"byte_end":2271,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":2272,"byte_end":2277,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/lib.rs","byte_start":2278,"byte_end":2285,"line_start":64,"line_end":64,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/iterators.rs","byte_start":30155,"byte_end":30159,"line_start":41,"line_end":41,"column_start":12,"column_end":16},"name":"Iter","qualname":"::iterators::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":15}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":22},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/iterators.rs","byte_start":30506,"byte_end":30513,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::iterators::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(has_std)","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/iterators.rs","byte_start":30479,"byte_end":30494,"line_start":60,"line_end":60,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":51},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/iterators.rs","byte_start":31680,"byte_end":31688,"line_start":118,"line_end":118,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::iterators::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":54}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":60},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/iterators.rs","byte_start":31995,"byte_end":32009,"line_start":138,"line_end":138,"column_start":12,"column_end":26},"name":"IntoSortedIter","qualname":"::iterators::IntoSortedIter","value":"IntoSortedIter {  }","parent":null,"children":[{"krate":0,"index":64}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(has_std)","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/iterators.rs","byte_start":31968,"byte_end":31983,"line_start":137,"line_end":137,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":252},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":34117,"byte_end":34130,"line_start":48,"line_end":48,"column_start":12,"column_end":25},"name":"PriorityQueue","qualname":"::pqueue::PriorityQueue","value":"PriorityQueue {  }","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259}],"decl_id":null,"docs":" A priority queue with efficient change function to change the priority of an\n element.","sig":null,"attributes":[{"value":"/ A priority queue with efficient change function to change the priority of an","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":33718,"byte_end":33798,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ element.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":33799,"byte_end":33811,"line_start":38,"line_end":38,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":33812,"byte_end":33815,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The priority is of type P, that must implement `std::cmp::Ord`.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":33816,"byte_end":33883,"line_start":40,"line_end":40,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":33884,"byte_end":33887,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The item is of type I, that must implement `Hash` and `Eq`.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":33888,"byte_end":33951,"line_start":42,"line_end":42,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":33952,"byte_end":33955,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Implemented as a heap of indexes, stores the items inside an `IndexMap`","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":33956,"byte_end":34031,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ to be able to retrieve them quickly.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":34032,"byte_end":34072,"line_start":45,"line_end":45,"column_start":1,"column_end":41}},{"value":"cfg(has_std)","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":34090,"byte_end":34105,"line_start":47,"line_end":47,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":35466,"byte_end":35469,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"new","qualname":"<PriorityQueue<I, P>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `PriorityQueue`\n","sig":null,"attributes":[{"value":"/ Creates an empty `PriorityQueue`","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":35418,"byte_end":35454,"line_start":100,"line_end":100,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":35601,"byte_end":35614,"line_start":106,"line_end":106,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<PriorityQueue<I, P>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `PriorityQueue` with the specified capacity.\n","sig":null,"attributes":[{"value":"/ Creates an empty `PriorityQueue` with the specified capacity.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":35524,"byte_end":35589,"line_start":105,"line_end":105,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":35889,"byte_end":35908,"line_start":118,"line_end":118,"column_start":12,"column_end":31},"name":"with_default_hasher","qualname":"<PriorityQueue<I, P, H>>::with_default_hasher","value":"pub fn with_default_hasher() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `PriorityQueue` with the default hasher\n","sig":null,"attributes":[{"value":"/ Creates an empty `PriorityQueue` with the default hasher","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":35817,"byte_end":35877,"line_start":117,"line_end":117,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":36077,"byte_end":36109,"line_start":123,"line_end":123,"column_start":12,"column_end":44},"name":"with_capacity_and_default_hasher","qualname":"<PriorityQueue<I, P, H>>::with_capacity_and_default_hasher","value":"pub fn with_capacity_and_default_hasher(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `PriorityQueue` with the specified capacity and default hasher\n","sig":null,"attributes":[{"value":"/ Creates an empty `PriorityQueue` with the specified capacity and default hasher","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":35982,"byte_end":36065,"line_start":122,"line_end":122,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":36382,"byte_end":36393,"line_start":135,"line_end":135,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<PriorityQueue<I, P, H>>::with_hasher","value":"pub fn with_hasher(H) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `PriorityQueue` with the specified hasher\n","sig":null,"attributes":[{"value":"/ Creates an empty `PriorityQueue` with the specified hasher","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":36308,"byte_end":36370,"line_start":134,"line_end":134,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":36753,"byte_end":36777,"line_start":144,"line_end":144,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<PriorityQueue<I, P, H>>::with_capacity_and_hasher","value":"pub fn with_capacity_and_hasher(usize, H) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `PriorityQueue` with the specified capacity and hasher","sig":null,"attributes":[{"value":"/ Creates an empty `PriorityQueue` with the specified capacity and hasher","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":36488,"byte_end":36563,"line_start":139,"line_end":139,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":36568,"byte_end":36571,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ The internal collections will be able to hold at least `capacity`","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":36576,"byte_end":36645,"line_start":141,"line_end":141,"column_start":5,"column_end":74}},{"value":"/ elements without reallocating.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":36650,"byte_end":36684,"line_start":142,"line_end":142,"column_start":5,"column_end":39}},{"value":"/ If `capacity` is 0, there will be no allocation.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":36689,"byte_end":36741,"line_start":143,"line_end":143,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":37160,"byte_end":37164,"line_start":155,"line_end":155,"column_start":12,"column_end":16},"name":"iter","qualname":"<PriorityQueue<I, P, H>>::iter","value":"pub fn iter(&Self) -> crate::pqueue::Iter<, I, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator in arbitrary order over the\n (item, priority) elements in the queue\n","sig":null,"attributes":[{"value":"/ Returns an iterator in arbitrary order over the","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":37050,"byte_end":37101,"line_start":153,"line_end":153,"column_start":5,"column_end":56}},{"value":"/ (item, priority) elements in the queue","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":37106,"byte_end":37148,"line_start":154,"line_end":154,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":37957,"byte_end":37965,"line_start":177,"line_end":177,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<PriorityQueue<I, P, H>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> crate::pqueue::IterMut<, I, P, H>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator in arbitrary order over the\n (item, priority) elements in the queue.","sig":null,"attributes":[{"value":"/ Return an iterator in arbitrary order over the","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":37366,"byte_end":37416,"line_start":167,"line_end":167,"column_start":5,"column_end":55}},{"value":"/ (item, priority) elements in the queue.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":37421,"byte_end":37464,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":37469,"byte_end":37472,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The item and the priority are mutable references, but it's a logic error","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":37477,"byte_end":37553,"line_start":170,"line_end":170,"column_start":5,"column_end":81}},{"value":"/ to modify the item in a way that change the result of `Hash` or `Eq`.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":37558,"byte_end":37631,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":37636,"byte_end":37639,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ It's *not* an error, instead, to modify the priorities, because the heap","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":37644,"byte_end":37720,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/ will be rebuilt once the `IterMut` goes out of scope. It would be","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":37725,"byte_end":37794,"line_start":174,"line_end":174,"column_start":5,"column_end":74}},{"value":"/ rebuilt even if no priority value would have been modified, but the","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":37799,"byte_end":37870,"line_start":175,"line_end":175,"column_start":5,"column_end":76}},{"value":"/ procedure will not move anything, but just compare the priorities.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":37875,"byte_end":37945,"line_start":176,"line_end":176,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":38233,"byte_end":38237,"line_start":185,"line_end":185,"column_start":12,"column_end":16},"name":"peek","qualname":"<PriorityQueue<I, P, H>>::peek","value":"pub fn peek(&Self) -> Option<(&I, &P)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the couple (item, priority) with the greatest\n priority in the queue, or None if it is empty.","sig":null,"attributes":[{"value":"/ Returns the couple (item, priority) with the greatest","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":38067,"byte_end":38124,"line_start":181,"line_end":181,"column_start":5,"column_end":62}},{"value":"/ priority in the queue, or None if it is empty.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":38129,"byte_end":38179,"line_start":182,"line_end":182,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":38184,"byte_end":38187,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":38192,"byte_end":38221,"line_start":184,"line_end":184,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":38891,"byte_end":38899,"line_start":203,"line_end":203,"column_start":12,"column_end":20},"name":"peek_mut","qualname":"<PriorityQueue<I, P, H>>::peek_mut","value":"pub fn peek_mut(&mut Self) -> Option<(&mut I, &P)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the couple (item, priority) with the greatest\n priority in the queue, or None if it is empty.","sig":null,"attributes":[{"value":"/ Returns the couple (item, priority) with the greatest","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":38408,"byte_end":38465,"line_start":192,"line_end":192,"column_start":5,"column_end":62}},{"value":"/ priority in the queue, or None if it is empty.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":38470,"byte_end":38520,"line_start":193,"line_end":193,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":38525,"byte_end":38528,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ The item is a mutable reference, but it's a logic error to modify it","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":38533,"byte_end":38605,"line_start":195,"line_end":195,"column_start":5,"column_end":77}},{"value":"/ in a way that change the result of  `Hash` or `Eq`.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":38610,"byte_end":38665,"line_start":196,"line_end":196,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":38670,"byte_end":38673,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ The priority cannot be modified with a call to this function.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":38678,"byte_end":38743,"line_start":198,"line_end":198,"column_start":5,"column_end":70}},{"value":"/ To modify the priority use `push`, `change_priority` or","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":38748,"byte_end":38807,"line_start":199,"line_end":199,"column_start":5,"column_end":64}},{"value":"/ `change_priority_by`.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":38812,"byte_end":38837,"line_start":200,"line_end":200,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":38842,"byte_end":38845,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":38850,"byte_end":38879,"line_start":202,"line_end":202,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":39380,"byte_end":39388,"line_start":217,"line_end":217,"column_start":12,"column_end":20},"name":"capacity","qualname":"<PriorityQueue<I, P, H>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the internal map can hold without\n reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the internal map can hold without","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":39131,"byte_end":39199,"line_start":212,"line_end":212,"column_start":5,"column_end":73}},{"value":"/ reallocating.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":39204,"byte_end":39221,"line_start":213,"line_end":213,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":39226,"byte_end":39229,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ This number is a lower bound; the map might be able to hold more,","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":39234,"byte_end":39303,"line_start":215,"line_end":215,"column_start":5,"column_end":74}},{"value":"/ but is guaranteed to be able to hold at least this many.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":39308,"byte_end":39368,"line_start":216,"line_end":216,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":40060,"byte_end":40067,"line_start":239,"line_end":239,"column_start":12,"column_end":19},"name":"reserve","qualname":"<PriorityQueue<I, P, H>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more elements to be inserted\n in the given `PriorityQueue`. The collection may reserve more space to avoid\n frequent reallocations. After calling `reserve`, capacity will be\n greater than or equal to `self.len() + additional`. Does nothing if\n capacity is already sufficient.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more elements to be inserted","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":39610,"byte_end":39686,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ in the given `PriorityQueue`. The collection may reserve more space to avoid","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":39691,"byte_end":39771,"line_start":231,"line_end":231,"column_start":5,"column_end":85}},{"value":"/ frequent reallocations. After calling `reserve`, capacity will be","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":39776,"byte_end":39845,"line_start":232,"line_end":232,"column_start":5,"column_end":74}},{"value":"/ greater than or equal to `self.len() + additional`. Does nothing if","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":39850,"byte_end":39921,"line_start":233,"line_end":233,"column_start":5,"column_end":76}},{"value":"/ capacity is already sufficient.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":39926,"byte_end":39961,"line_start":234,"line_end":234,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":39966,"byte_end":39969,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":39974,"byte_end":39986,"line_start":236,"line_end":236,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":39991,"byte_end":39994,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity overflows `usize`.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":39999,"byte_end":40048,"line_start":238,"line_end":238,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":40427,"byte_end":40440,"line_start":253,"line_end":253,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<PriorityQueue<I, P, H>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the internal data structures\n that support this operation as much as possible.\n","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the internal data structures","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":40302,"byte_end":40358,"line_start":251,"line_end":251,"column_start":5,"column_end":61}},{"value":"/ that support this operation as much as possible.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":40363,"byte_end":40415,"line_start":252,"line_end":252,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":40702,"byte_end":40705,"line_start":261,"line_end":261,"column_start":12,"column_end":15},"name":"pop","qualname":"<PriorityQueue<I, P, H>>::pop","value":"pub fn pop(&mut Self) -> Option<(I, P)>","parent":null,"children":[],"decl_id":null,"docs":" Removes the item with the greatest priority from\n the priority queue and returns the pair (item, priority),\n or None if the queue is empty.\n","sig":null,"attributes":[{"value":"/ Removes the item with the greatest priority from","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":40533,"byte_end":40585,"line_start":258,"line_end":258,"column_start":5,"column_end":57}},{"value":"/ the priority queue and returns the pair (item, priority),","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":40590,"byte_end":40651,"line_start":259,"line_end":259,"column_start":5,"column_end":66}},{"value":"/ or None if the queue is empty.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":40656,"byte_end":40690,"line_start":260,"line_end":260,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":41362,"byte_end":41366,"line_start":287,"line_end":287,"column_start":12,"column_end":16},"name":"push","qualname":"<PriorityQueue<I, P, H>>::push","value":"pub fn push(&mut Self, I, P) -> Option<P>","parent":null,"children":[],"decl_id":null,"docs":" Insert the item-priority pair into the queue.","sig":null,"attributes":[{"value":"/ Insert the item-priority pair into the queue.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":41069,"byte_end":41118,"line_start":280,"line_end":280,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":41123,"byte_end":41126,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ If an element equal to `item` was already into the queue,","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":41131,"byte_end":41192,"line_start":282,"line_end":282,"column_start":5,"column_end":66}},{"value":"/ it is updated and the old value of its priority returned in `Some`;","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":41197,"byte_end":41268,"line_start":283,"line_end":283,"column_start":5,"column_end":76}},{"value":"/ otherwise, return `None`.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":41273,"byte_end":41302,"line_start":284,"line_end":284,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":41307,"byte_end":41310,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(log(N))** time.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":41315,"byte_end":41350,"line_start":286,"line_end":286,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":43813,"byte_end":43826,"line_start":352,"line_end":352,"column_start":12,"column_end":25},"name":"push_increase","qualname":"<PriorityQueue<I, P, H>>::push_increase","value":"pub fn push_increase(&mut Self, I, P) -> Option<P>","parent":null,"children":[],"decl_id":null,"docs":" Increase the priority of an existing item in the queue, or\n insert it if not present.","sig":null,"attributes":[{"value":"/ Increase the priority of an existing item in the queue, or","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":43089,"byte_end":43151,"line_start":338,"line_end":338,"column_start":5,"column_end":67}},{"value":"/ insert it if not present.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":43156,"byte_end":43185,"line_start":339,"line_end":339,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":43190,"byte_end":43193,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ If an element equal to `item` is already in the queue with a","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":43198,"byte_end":43262,"line_start":341,"line_end":341,"column_start":5,"column_end":69}},{"value":"/ lower priority, its priority is increased to the new one","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":43267,"byte_end":43327,"line_start":342,"line_end":342,"column_start":5,"column_end":65}},{"value":"/ without replacing the element and the old priority is returned.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":43332,"byte_end":43399,"line_start":343,"line_end":343,"column_start":5,"column_end":72}},{"value":"/ Otherwise, the new element is inserted into the queue.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":43404,"byte_end":43462,"line_start":344,"line_end":344,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":43467,"byte_end":43470,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ Returns `Some` if an element equal to `item` is already in the","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":43475,"byte_end":43541,"line_start":346,"line_end":346,"column_start":5,"column_end":71}},{"value":"/ queue. If its priority is higher then `priority`, the latter is returned back,","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":43546,"byte_end":43628,"line_start":347,"line_end":347,"column_start":5,"column_end":87}},{"value":"/ otherwise, the old priority is contained in the Option.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":43633,"byte_end":43692,"line_start":348,"line_end":348,"column_start":5,"column_end":64}},{"value":"/ If the item is not in the queue, `None` is returned.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":43697,"byte_end":43753,"line_start":349,"line_end":349,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":43758,"byte_end":43761,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(log(N))** time.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":43766,"byte_end":43801,"line_start":351,"line_end":351,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":44772,"byte_end":44785,"line_start":374,"line_end":374,"column_start":12,"column_end":25},"name":"push_decrease","qualname":"<PriorityQueue<I, P, H>>::push_decrease","value":"pub fn push_decrease(&mut Self, I, P) -> Option<P>","parent":null,"children":[],"decl_id":null,"docs":" Decrease the priority of an existing item in the queue, or\n insert it if not present.","sig":null,"attributes":[{"value":"/ Decrease the priority of an existing item in the queue, or","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":44048,"byte_end":44110,"line_start":360,"line_end":360,"column_start":5,"column_end":67}},{"value":"/ insert it if not present.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":44115,"byte_end":44144,"line_start":361,"line_end":361,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":44149,"byte_end":44152,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ If an element equal to `item` is already in the queue with a","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":44157,"byte_end":44221,"line_start":363,"line_end":363,"column_start":5,"column_end":69}},{"value":"/ higher priority, its priority is decreased to the new one","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":44226,"byte_end":44287,"line_start":364,"line_end":364,"column_start":5,"column_end":66}},{"value":"/ without replacing the element and the old priority is returned.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":44292,"byte_end":44359,"line_start":365,"line_end":365,"column_start":5,"column_end":72}},{"value":"/ Otherwise, the new element is inserted into the queue.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":44364,"byte_end":44422,"line_start":366,"line_end":366,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":44427,"byte_end":44430,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ Returns `Some` if an element equal to `item` is already in the","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":44435,"byte_end":44501,"line_start":368,"line_end":368,"column_start":5,"column_end":71}},{"value":"/ queue. If its priority is lower then `priority`, the latter is returned back,","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":44506,"byte_end":44587,"line_start":369,"line_end":369,"column_start":5,"column_end":86}},{"value":"/ otherwise, the old priority is contained in the Option.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":44592,"byte_end":44651,"line_start":370,"line_end":370,"column_start":5,"column_end":64}},{"value":"/ If the item is not in the queue, `None` is returned.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":44656,"byte_end":44712,"line_start":371,"line_end":371,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":44717,"byte_end":44720,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(log(N))** time.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":44725,"byte_end":44760,"line_start":373,"line_end":373,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":45408,"byte_end":45423,"line_start":390,"line_end":390,"column_start":12,"column_end":27},"name":"change_priority","qualname":"<PriorityQueue<I, P, H>>::change_priority","value":"pub fn change_priority<Q: ?Sized>(&mut Self, &Q, P) -> Option<P> where\nI: Borrow<Q>, Q: Eq + Hash","parent":null,"children":[],"decl_id":null,"docs":" Change the priority of an Item returning the old value of priority,\n or `None` if the item wasn't in the queue.","sig":null,"attributes":[{"value":"/ Change the priority of an Item returning the old value of priority,","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":45007,"byte_end":45078,"line_start":382,"line_end":382,"column_start":5,"column_end":76}},{"value":"/ or `None` if the item wasn't in the queue.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":45083,"byte_end":45129,"line_start":383,"line_end":383,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":45134,"byte_end":45137,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ The argument `item` is only used for lookup, and is not used to overwrite the item's data","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":45142,"byte_end":45235,"line_start":385,"line_end":385,"column_start":5,"column_end":98}},{"value":"/ in the priority queue.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":45240,"byte_end":45266,"line_start":386,"line_end":386,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":45271,"byte_end":45274,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ The item is found in **O(1)** thanks to the hash table.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":45279,"byte_end":45338,"line_start":388,"line_end":388,"column_start":5,"column_end":64}},{"value":"/ The operation is performed in **O(log(N))** time.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":45343,"byte_end":45396,"line_start":389,"line_end":389,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":46126,"byte_end":46144,"line_start":412,"line_end":412,"column_start":12,"column_end":30},"name":"change_priority_by","qualname":"<PriorityQueue<I, P, H>>::change_priority_by","value":"pub fn change_priority_by<Q: ?Sized, F>(&mut Self, &Q, F) where I: Borrow<Q>,\nQ: Eq + Hash, F: FnOnce(&mut P) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Change the priority of an Item using the provided function.\n The item is found in **O(1)** thanks to the hash table.\n The operation is performed in **O(log(N))** time (worst case).\n","sig":null,"attributes":[{"value":"/ Change the priority of an Item using the provided function.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":45916,"byte_end":45979,"line_start":409,"line_end":409,"column_start":5,"column_end":68}},{"value":"/ The item is found in **O(1)** thanks to the hash table.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":45984,"byte_end":46043,"line_start":410,"line_end":410,"column_start":5,"column_end":64}},{"value":"/ The operation is performed in **O(log(N))** time (worst case).","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":46048,"byte_end":46114,"line_start":411,"line_end":411,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":46708,"byte_end":46720,"line_start":431,"line_end":431,"column_start":12,"column_end":24},"name":"get_priority","qualname":"<PriorityQueue<I, P, H>>::get_priority","value":"pub fn get_priority<Q: ?Sized>(&Self, &Q) -> Option<&P> where I: Borrow<Q>,\nQ: Eq + Hash","parent":null,"children":[],"decl_id":null,"docs":" Get the priority of an item, or `None`, if the item is not in the queue\n","sig":null,"attributes":[{"value":"/ Get the priority of an item, or `None`, if the item is not in the queue","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":46621,"byte_end":46696,"line_start":430,"line_end":430,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":46997,"byte_end":47000,"line_start":441,"line_end":441,"column_start":12,"column_end":15},"name":"get","qualname":"<PriorityQueue<I, P, H>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<(&I, &P)> where I: Borrow<Q>,\nQ: Eq + Hash","parent":null,"children":[],"decl_id":null,"docs":" Get the couple (item, priority) of an arbitrary element, as reference\n or `None` if the item is not in the queue.\n","sig":null,"attributes":[{"value":"/ Get the couple (item, priority) of an arbitrary element, as reference","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":46861,"byte_end":46934,"line_start":439,"line_end":439,"column_start":5,"column_end":78}},{"value":"/ or `None` if the item is not in the queue.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":46939,"byte_end":46985,"line_start":440,"line_end":440,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":47617,"byte_end":47624,"line_start":458,"line_end":458,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<PriorityQueue<I, P, H>>::get_mut","value":"pub fn get_mut<Q: ?Sized>(&mut Self, &Q) -> Option<(&mut I, &P)> where\nI: Borrow<Q>, Q: Eq + Hash","parent":null,"children":[],"decl_id":null,"docs":" Get the couple (item, priority) of an arbitrary element, or `None`\n if the item was not in the queue.","sig":null,"attributes":[{"value":"/ Get the couple (item, priority) of an arbitrary element, or `None`","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":47176,"byte_end":47246,"line_start":449,"line_end":449,"column_start":5,"column_end":75}},{"value":"/ if the item was not in the queue.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":47251,"byte_end":47288,"line_start":450,"line_end":450,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":47293,"byte_end":47296,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ The item is a mutable reference, but it's a logic error to modify it","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":47301,"byte_end":47373,"line_start":452,"line_end":452,"column_start":5,"column_end":77}},{"value":"/ in a way that change the result of  `Hash` or `Eq`.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":47378,"byte_end":47433,"line_start":453,"line_end":453,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":47438,"byte_end":47441,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ The priority cannot be modified with a call to this function.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":47446,"byte_end":47511,"line_start":455,"line_end":455,"column_start":5,"column_end":70}},{"value":"/ To modify the priority use `push`, `change_priority` or","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":47516,"byte_end":47575,"line_start":456,"line_end":456,"column_start":5,"column_end":64}},{"value":"/ `change_priority_by`.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":47580,"byte_end":47605,"line_start":457,"line_end":457,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":48061,"byte_end":48067,"line_start":471,"line_end":471,"column_start":12,"column_end":18},"name":"remove","qualname":"<PriorityQueue<I, P, H>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<(I, P)> where I: Borrow<Q>,\nQ: Eq + Hash","parent":null,"children":[],"decl_id":null,"docs":" Remove an arbitrary element from the priority queue.\n Returns the (item, priority) couple or None if the item\n is not found in the queue.","sig":null,"attributes":[{"value":"/ Remove an arbitrary element from the priority queue.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":47815,"byte_end":47871,"line_start":466,"line_end":466,"column_start":5,"column_end":61}},{"value":"/ Returns the (item, priority) couple or None if the item","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":47876,"byte_end":47935,"line_start":467,"line_end":467,"column_start":5,"column_end":64}},{"value":"/ is not found in the queue.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":47940,"byte_end":47970,"line_start":468,"line_end":468,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":47975,"byte_end":47978,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ The operation is performed in **O(log(N))** time (worst case).","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":47983,"byte_end":48049,"line_start":470,"line_end":470,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":49244,"byte_end":49252,"line_start":509,"line_end":509,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<PriorityQueue<I, P, H>>::into_vec","value":"pub fn into_vec(Self) -> Vec<I>","parent":null,"children":[],"decl_id":null,"docs":" Returns the items not ordered\n","sig":null,"attributes":[{"value":"/ Returns the items not ordered","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":49199,"byte_end":49232,"line_start":508,"line_end":508,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":49451,"byte_end":49466,"line_start":520,"line_end":520,"column_start":12,"column_end":27},"name":"into_sorted_vec","qualname":"<PriorityQueue<I, P, H>>::into_sorted_vec","value":"pub fn into_sorted_vec(Self) -> Vec<I>","parent":null,"children":[],"decl_id":null,"docs":" Implements a HeapSort\n","sig":null,"attributes":[{"value":"/ Implements a HeapSort","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":49414,"byte_end":49439,"line_start":519,"line_end":519,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":49715,"byte_end":49718,"line_start":529,"line_end":529,"column_start":12,"column_end":15},"name":"len","qualname":"<PriorityQueue<I, P, H>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the priority queue.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the priority queue.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":49646,"byte_end":49703,"line_start":528,"line_end":528,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":49838,"byte_end":49846,"line_start":534,"line_end":534,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<PriorityQueue<I, P, H>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the priority queue contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns true if the priority queue contains no elements.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":49766,"byte_end":49826,"line_start":533,"line_end":533,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":50050,"byte_end":50055,"line_start":546,"line_end":546,"column_start":12,"column_end":17},"name":"clear","qualname":"<PriorityQueue<I, P, H>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Drops all items from the priority queue\n","sig":null,"attributes":[{"value":"/ Drops all items from the priority queue","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":49995,"byte_end":50038,"line_start":545,"line_end":545,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":50525,"byte_end":50531,"line_start":560,"line_end":560,"column_start":12,"column_end":18},"name":"append","qualname":"<PriorityQueue<I, P, H>>::append","value":"pub fn append(&mut Self, &mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Move all items of the `other` queue to `self`\n ignoring the items Eq to elements already in `self`\n At the end, `other` will be empty.","sig":null,"attributes":[{"value":"/ Move all items of the `other` queue to `self`","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":50181,"byte_end":50230,"line_start":553,"line_end":553,"column_start":5,"column_end":54}},{"value":"/ ignoring the items Eq to elements already in `self`","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":50235,"byte_end":50290,"line_start":554,"line_end":554,"column_start":5,"column_end":60}},{"value":"/ At the end, `other` will be empty.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":50295,"byte_end":50333,"line_start":555,"line_end":555,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":50338,"byte_end":50341,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ **Note** that at the end, the priority of the duplicated elements","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":50346,"byte_end":50415,"line_start":557,"line_end":557,"column_start":5,"column_end":74}},{"value":"/ inside self may be the one of the elements in other,","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":50420,"byte_end":50476,"line_start":558,"line_end":558,"column_start":5,"column_end":61}},{"value":"/ if other is longer than self","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":50481,"byte_end":50513,"line_start":559,"line_end":559,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":51414,"byte_end":51430,"line_start":593,"line_end":593,"column_start":12,"column_end":28},"name":"into_sorted_iter","qualname":"<PriorityQueue<I, P, H>>::into_sorted_iter","value":"pub fn into_sorted_iter(Self) -> IntoSortedIter<I, P, H>","parent":null,"children":[],"decl_id":null,"docs":" Generates a new iterator from self that\n will extract the elements from the one with the highest priority\n to the lowest one.\n","sig":null,"attributes":[{"value":"/ Generates a new iterator from self that","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":51259,"byte_end":51302,"line_start":590,"line_end":590,"column_start":5,"column_end":48}},{"value":"/ will extract the elements from the one with the highest priority","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":51307,"byte_end":51375,"line_start":591,"line_end":591,"column_start":5,"column_end":73}},{"value":"/ to the lowest one.","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":51380,"byte_end":51402,"line_start":592,"line_end":592,"column_start":5,"column_end":27}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/iterators.rs","byte_start":30309,"byte_end":30313,"line_start":49,"line_end":49,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/iterators.rs","byte_start":30842,"byte_end":30849,"line_start":80,"line_end":80,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/iterators.rs","byte_start":31060,"byte_end":31067,"line_start":90,"line_end":90,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/iterators.rs","byte_start":31546,"byte_end":31553,"line_start":108,"line_end":108,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/iterators.rs","byte_start":31814,"byte_end":31822,"line_start":126,"line_end":126,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/iterators.rs","byte_start":32284,"byte_end":32298,"line_start":155,"line_end":155,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":35056,"byte_end":35069,"line_start":75,"line_end":75,"column_start":22,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":35166,"byte_end":35179,"line_start":83,"line_end":83,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":35356,"byte_end":35369,"line_start":95,"line_end":95,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":35722,"byte_end":35735,"line_start":111,"line_end":111,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":36223,"byte_end":36236,"line_start":128,"line_end":128,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":37301,"byte_end":37314,"line_start":162,"line_end":162,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":39458,"byte_end":39471,"line_start":222,"line_end":222,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":40237,"byte_end":40250,"line_start":246,"line_end":246,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":40984,"byte_end":40997,"line_start":274,"line_end":274,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":147},{"krate":0,"index":149},{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":162},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":49349,"byte_end":49362,"line_start":514,"line_end":514,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":49910,"byte_end":49923,"line_start":539,"line_end":539,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":51194,"byte_end":51207,"line_start":585,"line_end":585,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":56098,"byte_end":56111,"line_start":736,"line_end":736,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":56837,"byte_end":56850,"line_start":762,"line_end":762,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":57901,"byte_end":57914,"line_start":798,"line_end":798,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":58812,"byte_end":58825,"line_start":840,"line_end":840,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":60062,"byte_end":60075,"line_start":880,"line_end":880,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":60431,"byte_end":60444,"line_start":894,"line_end":894,"column_start":65,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/iterators.rs","byte_start":30309,"byte_end":30313,"line_start":49,"line_end":49,"column_start":37,"column_end":41},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":11},"to":{"krate":2,"index":5632}},{"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/iterators.rs","byte_start":30842,"byte_end":30849,"line_start":80,"line_end":80,"column_start":31,"column_end":38},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":22},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/iterators.rs","byte_start":31060,"byte_end":31067,"line_start":90,"line_end":90,"column_start":52,"column_end":59},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":22},"to":{"krate":2,"index":5632}},{"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/iterators.rs","byte_start":31546,"byte_end":31553,"line_start":108,"line_end":108,"column_start":40,"column_end":47},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":22},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/iterators.rs","byte_start":31814,"byte_end":31822,"line_start":126,"line_end":126,"column_start":25,"column_end":33},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":5632}},{"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/iterators.rs","byte_start":32284,"byte_end":32298,"line_start":155,"line_end":155,"column_start":28,"column_end":42},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":60},"to":{"krate":2,"index":5632}},{"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":35056,"byte_end":35069,"line_start":75,"line_end":75,"column_start":22,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":252},"to":{"krate":2,"index":1803}},{"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":35166,"byte_end":35179,"line_start":83,"line_end":83,"column_start":27,"column_end":40},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":252},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":35356,"byte_end":35369,"line_start":95,"line_end":95,"column_start":12,"column_end":25},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":35722,"byte_end":35735,"line_start":111,"line_end":111,"column_start":15,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":36223,"byte_end":36236,"line_start":128,"line_end":128,"column_start":15,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":37301,"byte_end":37314,"line_start":162,"line_end":162,"column_start":15,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":39458,"byte_end":39471,"line_start":222,"line_end":222,"column_start":15,"column_end":28},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":40237,"byte_end":40250,"line_start":246,"line_end":246,"column_start":15,"column_end":28},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":40984,"byte_end":40997,"line_start":274,"line_end":274,"column_start":15,"column_end":28},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":49349,"byte_end":49362,"line_start":514,"line_end":514,"column_start":15,"column_end":28},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":49910,"byte_end":49923,"line_start":539,"line_end":539,"column_start":15,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":51194,"byte_end":51207,"line_start":585,"line_end":585,"column_start":15,"column_end":28},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":56098,"byte_end":56111,"line_start":736,"line_end":736,"column_start":37,"column_end":50},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":252},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":56837,"byte_end":56850,"line_start":762,"line_end":762,"column_start":40,"column_end":53},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":252},"to":{"krate":2,"index":5532}},{"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":57901,"byte_end":57914,"line_start":798,"line_end":798,"column_start":32,"column_end":45},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":252},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":58812,"byte_end":58825,"line_start":840,"line_end":840,"column_start":34,"column_end":47},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":252},"to":{"krate":2,"index":5545}},{"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":60062,"byte_end":60075,"line_start":880,"line_end":880,"column_start":30,"column_end":43},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":252},"to":{"krate":2,"index":6960}},{"span":{"file_name":"/Users/zerrocdn/.cargo/registry/src/github.com-1ecc6299db9ec823/priority-queue-1.1.1/src/pqueue.rs","byte_start":60431,"byte_end":60444,"line_start":894,"line_end":894,"column_start":65,"column_end":78},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":252},"to":{"krate":2,"index":1798}}]}